spring:
  cloud:
    bus:
      trace:
        enabled: true
  redis:
    host: ${REDIS_HOST:10.0.4.138}
    port: ${REDIS_PORT:8086}
    lettuce:
      pool:
        max-active: 300
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:${DATASOURCE_DBTYPE:mysql}://${DATASOURCE_HOST:111.229.218.230}:${DATASOURCE_PORT:3306}/sc_admin?characterEncoding=UTF-8&useUnicode=true&useSSL=false
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:root123!}
  #zipkin:
  #  enabled: true
  #  sender:
  #    type: rabbit
  #sleuth:
  #  sampler:
  #    probability: 1.0
  mvc:
    throw-exception-if-no-handler-found: true

#  resources:
#    add-mappings: false

jetcache:
  statIntervalMinutes: 15
  areaInCacheName: false
  hidePackages: com.springboot.cloud
  local:
    # 默认2小时本地缓存
    default:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 3600000
      expireAfterAccessInMillis: 1800000
    # 長時本地緩存，主要用于要求时效一般
    longTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 300000
      expireAfterAccessInMillis: 180000
    # 短時本地緩存，主要用于要求时效较高的配置
    shortTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 60000
      expireAfterAccessInMillis: 40000
  remote:
    # 默认2小时的远程缓存
    default:
      type: redis
      expireAfterWriteInMillis: 43200000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:111.229.218.230}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:root}
    # 长时远程緩存，主要用于要求时效要求一般的集中式缓存
    longTime:
      type: redis
      expireAfterWriteInMillis: 7200000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:111.229.218.230}
      port: ${REDIS_PORT:6379}
    # 短時远程緩存，主要用于要求时效较高的集中式缓存
    shortTime:
      type: redis
      expireAfterWriteInMillis: 300000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:111.229.218.230}
      port: ${REDIS_PORT:6379}
